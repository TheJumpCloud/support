name: PowerShell Module CI

env:
  # Set the release type of the release, valid values are 'major', 'minor' or 'patch'
  # override version boolean. If specified, valid vlaues are 'true' or 'false'
  OVERRIDE_VERSION: "false"
on:
  pull_request:
    # Sequence of patterns matched against refs/heads
    branches:
      - "master"
    paths:
      - "PowerShell/Deploy/**"
      - "PowerShell/JumpCloud Module/**"
      - "PowerShell/ModuleChangelog.md"
    types: [opened, synchronize, reopened, labeled, unlabeled]
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  Display-Vars:
    runs-on: ubuntu-latest
    steps:
      - name: Check PR Labels
        id: label-check
        run: |
          PR_Labels=$(curl -s "https://api.github.com/repos/${{ github.repository }}/issues${{ github.event.pull_request.number }}/labels | jq -r '.[].name')
          echo "::set-output name=labels::$PR_Labels"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: set env variables
        run: |
          if [[ "${{steps.label-check.output.labels }}"  == *"major"* ]];then
            echo "Setting ENV_LABEL=major"
            echo "ENV_LABEL=$(echo 'major')" >> $env:GITHUB_ENV
          elif [[ "${{steps.label-check.output.labels }}"  == *"minor"* ]];then
            echo "Setting ENV_LABEL=minor"
            echo "ENV_LABEL=$(echo 'minor')" >> $env:GITHUB_ENV
          fi
      - name: show the refs
        shell: bash
        run: |
          echo github.base_ref ${{ github.base_ref }}
          echo github.head_ref ${{ github.head_ref }}
          echo github.ref ${{ github.ref }}
          echo github.ref_name ${{ github.ref_name }}
          echo $ENV_LABEL

  Filter-Branch:
    runs-on: ubuntu-latest
    if: contains(github.event.pull_request.labels.*.name, 'PowerShell Module')
    steps:
      - run: echo "Building JumpCloud Module Event 'JumpCloudModule_'"

  Next-Step:
    needs: Filter-Branch
    runs-on: ubuntu-latest
    steps:
      - name: Hello World
        run: echo "hello"
